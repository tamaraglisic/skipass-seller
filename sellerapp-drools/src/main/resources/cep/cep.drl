package cep
import com.project.sellerapp.dto.LoginEvent
import com.project.sellerapp.dto.ReservationEvent
import com.project.sellerapp.dto.PolicyEvent


declare SuspiciousUserEvent
    @role(event)
    @expires(1m)
    username: String
    reason: String
end


declare SuspiciousReservationEvent
    @role(event)
    @expires(1m)
    username: String
    reason: String
end

declare UsedPolicyEvent
    @role(event)
    @expires(24h)
    skiResort: String
    reason: String
end

rule "More than 5 login requests in a minute"
	agenda-group "login"
	no-loop
    when
        $u1: LoginEvent($username: username)
        Number(intValue >= 5) from accumulate(
            $u2: LoginEvent(
                this != $u1, 
                username == $username
            )over window:time( 1m ),
            count($u2)
        )
        not (SuspiciousUserEvent(username == $username, reason == "Many login requests"))
    then
    	System.out.println("Many login requests" );
        insert(new SuspiciousUserEvent($username, "Many login requests"));
end

rule "More than 5 reservations requests in a minute"
	agenda-group "reservations"
	no-loop
    when
        $u1: ReservationEvent($username: username)
        Number(intValue >= 5) from accumulate(
            $u2: ReservationEvent(
                this != $u1, 
                username == $username
            )over window:time( 1m ),
            count($u2)
        )
        not (SuspiciousReservationEvent(username == $username, reason == "Many reservation requests"))
    then
    	System.out.println("Many reservation requests" );
        insert(new SuspiciousReservationEvent($username, "Many reservation requests"));
end

rule "More than 10 injuries in 24 hours at ski resort"
	agenda-group "injuries"
	no-loop
    when
        $u1: PolicyEvent($skiResort: skiResort)
        Number(intValue >= 10) from accumulate(
            $u2: PolicyEvent(
                this != $u1, 
                skiResort == $skiResort
            )over window:time( 24h ),
            count($u2)
        )
        not (UsedPolicyEvent(skiResort == $skiResort, reason == "More than 10 injuries"))
    then
    	System.out.println("More than 10 injuries at " + $skiResort + " resort");
        insert(new UsedPolicyEvent($skiResort, "More than 10 injuries"));
end